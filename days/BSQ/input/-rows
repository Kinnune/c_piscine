/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   main.c                                             :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: ekinnune <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/02/24 17:12:57 by ekinnune          #+#    #+#             */
/*   Updated: 2020/02/25 02:40:45 by ekinnune         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */


#include <fcntl.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>

struct			s_map
{
	int			
	int			lines;
	char		empty;
	char		block;
	char		fill;
};

struct s_map map_struct;

void	ft_map_characters(int filedes)
{
	char readchar[1];
	int readsucces;

	readchar[0] = '0';
	while (*readchar >= '0' && *readchar <= '9')
	{
		read(filedes, readchar, 1);
	}
	map_struct.empty = readchar[0];
	read(filedes, readchar, 1);
	map_struct.block = readchar[0];
	read(filedes, readchar, 1);
	map_struct.fill = readchar[0];
	read(filedes, readchar, 1);	
	
}

int	ft_count_map(int filedes, char *mapname)
{
	int readsucces;
	char placeholderchar[1];
	int maplength;

	map_struct.lines = -2;
	maplength = 0;
	readsucces = 1;
	while (readsucces > 0)
	{
		readsucces = read(filedes, placeholderchar, 1);
		maplength++;
		if (*placeholderchar == '\n')
			map_struct.lines++;
	}
	close(filedes);
	open(mapname, O_RDONLY);
	return (maplength);
}

int main(int argc, char **argv)
{
	char *array;
	int charamount;
	int filedes;
	filedes = open(argv[1], O_RDONLY);
	printf("%i", ft_count_map(filedes, argv[1]));
	ft_map_characters(filedes);
	printf("\n lines = %i empty = %c block = %c fill = %c \n",map_struct.lines, map_struct.empty, map_struct.block, map_struct.fill);
	return (0);
/*	charamount = read(filedes, array, buffer);
	printf("%s%i characters.\n", array, charamount);
	close(filedes);
	filedes = open(argv[1], O_RDONLY);
	charamount = read(filedes, array2, buffer);
	printf("%s%i", array2, charamount);
	close(filedes);
	return (0);
*/
}
